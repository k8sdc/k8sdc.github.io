{
    "docs": [
        {
            "location": "/", 
            "text": "Welcome to k8sdc\n\n\n\n\n\nPurpose\n\n\nk8sdc, aka Kubernetes Datacenter, is a project to create the capabilities of an entire datacenter infrastructure sat atop \nKubernetes\n.  This includes all of the software needed for CI/CD, source control, code review, artifact storage, centralised logging and alerting, user registry, mail server, load balancing, VPN, blogs, wiki, productivity tools, etc.\n\n\nThe intention is to give small / medium and non-profit organisations the ability to stand up an infrastructure that rivals the capabilities of an enterprise at little to no cost and within hours.\n\n\nThe k8sdc platform will be cloud provider agnostic.  It may make use of some cloud provider capabilities, such as external load balancers, but this will be as an alternative to core capabilities.\n\n\nThere will be simple \nworkflow guides\n that describe each of the capabilities and how to use them in combination.  This will allow development and delivery of applications in a simple, rapid and robust manner.\n\n\nThis is a long term project and as such it will take some time to develop.  Especially if the quality is to be kept high.  Initially just the core Kubernetes infrastructure and services are being delivered.  But this will soon be supplemented with additional capabilities.  Please see the \nRoadmap\n for further information.\n\n\nTopology\n\n\nThe core k8sdc topology is a simple Kubernetes master plus n x nodes topology.  As can seen below.\n\n\n\n\nAs k8sdc grows there will be additional node types that have specialised roles, even though they are still orchestrated by Kubernetes.  Such as for network storage, external load balancers, etc.\n\n\nThere will be a collection of namespaces to contain the k8sdc services.  Application environments can then be created in additonal namespaces.\n\n\nThe Kubernetes networking is configured using Flannel.\n\n\nAnsible\n\n\nAnsible\n is used to build and configure the k8sdc platform.  Instead of using a particular Linux distributions package manager the binaries for Kubernetes, Flannel, Docker and Etcd are all downloaded directly, meaning that the latest versions can be used.\n\n\nInstallation\n\n\n\n\n\n\nVagrant\n\n\n\n\n\n\nDigital Ocean\n - \ntodo\n\n\n\n\n\n\nAWS\n - \ntodo", 
            "title": "Home"
        }, 
        {
            "location": "/#welcome-to-k8sdc", 
            "text": "", 
            "title": "Welcome to k8sdc"
        }, 
        {
            "location": "/#purpose", 
            "text": "k8sdc, aka Kubernetes Datacenter, is a project to create the capabilities of an entire datacenter infrastructure sat atop  Kubernetes .  This includes all of the software needed for CI/CD, source control, code review, artifact storage, centralised logging and alerting, user registry, mail server, load balancing, VPN, blogs, wiki, productivity tools, etc.  The intention is to give small / medium and non-profit organisations the ability to stand up an infrastructure that rivals the capabilities of an enterprise at little to no cost and within hours.  The k8sdc platform will be cloud provider agnostic.  It may make use of some cloud provider capabilities, such as external load balancers, but this will be as an alternative to core capabilities.  There will be simple  workflow guides  that describe each of the capabilities and how to use them in combination.  This will allow development and delivery of applications in a simple, rapid and robust manner.  This is a long term project and as such it will take some time to develop.  Especially if the quality is to be kept high.  Initially just the core Kubernetes infrastructure and services are being delivered.  But this will soon be supplemented with additional capabilities.  Please see the  Roadmap  for further information.", 
            "title": "Purpose"
        }, 
        {
            "location": "/#topology", 
            "text": "The core k8sdc topology is a simple Kubernetes master plus n x nodes topology.  As can seen below.   As k8sdc grows there will be additional node types that have specialised roles, even though they are still orchestrated by Kubernetes.  Such as for network storage, external load balancers, etc.  There will be a collection of namespaces to contain the k8sdc services.  Application environments can then be created in additonal namespaces.  The Kubernetes networking is configured using Flannel.", 
            "title": "Topology"
        }, 
        {
            "location": "/#ansible", 
            "text": "Ansible  is used to build and configure the k8sdc platform.  Instead of using a particular Linux distributions package manager the binaries for Kubernetes, Flannel, Docker and Etcd are all downloaded directly, meaning that the latest versions can be used.", 
            "title": "Ansible"
        }, 
        {
            "location": "/#installation", 
            "text": "Vagrant    Digital Ocean  -  todo    AWS  -  todo", 
            "title": "Installation"
        }, 
        {
            "location": "/project/installation/vagrant/", 
            "text": "Vagrant Installation\n\n\n\n\n\nPre-Reqs\n\n\nk8sdc has been tested using the following products.\n\n\n\n\n\n\nAnsible 1.9.2\n\n\n\n\n\n\nVirtualbox 5.0.0\n\n\n\n\n\n\nVagrant 1.7.4 and vagrant-hostmanager 1.6.1 plugin\n\n\n\n\n\n\nMac OSX 10\n\n\n\n\n\n\nNote\n\n\n\n\nThe Macs that have tested the install have had 16GB RAM.  However, k8sdc should run in 8GB if not running any large programs.\n\n\n\n\nInstructions\n\n\nStart the installation process.\n\n\nNotes\n\n\n\n\n\n\nIt will take some time to download the base box and installation binaries. \n\n\n\n\n\n\nThe vagrant-hostmanager plugin will ask for your admin password.  This is so that your local \n/etc/hosts\n file can be updated with the Kubernetes hostnames.\n\n\n\n\n\n\n$ vagrant up\n\n\n\n\nIf for any reason the Vagrant provisioning fails due to a timeout then rerun the provisioning with the following command.\n\n\n$ vagrant provision\n\n\n\n\nOnce the Vagrant command completes, k8sdc will begin pulling down the Docker images required to build the services.  This will take some time (at least 20 minutes).  Once this is done you can test the installation uisng either of the following guides.\n\n\n\n\n\n\nVerifying Installation\n\n\n\n\n\n\nAccessing Services", 
            "title": "Vagrant"
        }, 
        {
            "location": "/project/installation/vagrant/#vagrant-installation", 
            "text": "", 
            "title": "Vagrant Installation"
        }, 
        {
            "location": "/project/installation/vagrant/#pre-reqs", 
            "text": "k8sdc has been tested using the following products.    Ansible 1.9.2    Virtualbox 5.0.0    Vagrant 1.7.4 and vagrant-hostmanager 1.6.1 plugin    Mac OSX 10    Note   The Macs that have tested the install have had 16GB RAM.  However, k8sdc should run in 8GB if not running any large programs.", 
            "title": "Pre-Reqs"
        }, 
        {
            "location": "/project/installation/vagrant/#instructions", 
            "text": "Start the installation process.  Notes    It will take some time to download the base box and installation binaries.     The vagrant-hostmanager plugin will ask for your admin password.  This is so that your local  /etc/hosts  file can be updated with the Kubernetes hostnames.    $ vagrant up  If for any reason the Vagrant provisioning fails due to a timeout then rerun the provisioning with the following command.  $ vagrant provision  Once the Vagrant command completes, k8sdc will begin pulling down the Docker images required to build the services.  This will take some time (at least 20 minutes).  Once this is done you can test the installation uisng either of the following guides.    Verifying Installation    Accessing Services", 
            "title": "Instructions"
        }, 
        {
            "location": "/project/installation/digital_ocean/", 
            "text": "Digital Ocean Installation\n\n\n\n\n\nTODO", 
            "title": "Digital Ocean"
        }, 
        {
            "location": "/project/installation/digital_ocean/#digital-ocean-installation", 
            "text": "TODO", 
            "title": "Digital Ocean Installation"
        }, 
        {
            "location": "/project/installation/aws/", 
            "text": "AWS Installation\n\n\n\n\n\nTODO", 
            "title": "AWS"
        }, 
        {
            "location": "/project/installation/aws/#aws-installation", 
            "text": "TODO", 
            "title": "AWS Installation"
        }, 
        {
            "location": "/project/installation/verify_install/", 
            "text": "Verifying Installation\n\n\n\n\n\nUse the following instructions to validate that the install has succeeded.  The hostnames used are the default Vagrant ones, replace as appropriate.\n\n\n$ vagrant ssh master.k8sdc.io\n\n$ sudo su -\n\n$ kubectl get node\nNAME           LABELS                                STATUS\nnode1.k8sdc.io   kubernetes.io/hostname=node1.k8sdc.io   Ready\nnode2.k8sdc.io   kubernetes.io/hostname=node2.k8sdc.io   Ready\n\n$ kubectl run nginx --image=nginx --replicas=5\nreplicationcontroller \nnginx\n created\n\n\n\n\nIt will take a while for Docker to download the nginx container.  Periodically check if the pods have been launched.\n\n\n$ kubectl get po\nNAME          READY     STATUS    RESTARTS   AGE\nnginx-2gkxs   1/1       Running   0          1m\nnginx-479e3   1/1       Running   0          1m\nnginx-gm7m8   1/1       Running   0          1m\nnginx-rtha7   1/1       Running   0          1m\nnginx-xfm0b   1/1       Running   0          1m\n\n\n\n\nCreate a service endpoint for the pods.\n\n\n$ kubectl expose rc nginx --port=80 --target-port=80\nservice \nnginx\n exposed\n\n$ kubectl get svc nginx\nNAME      CLUSTER_IP     EXTERNAL_IP   PORT(S)   SELECTOR    AGE\nnginx     10.254.4.181   \nnone\n        80/TCP    run=nginx   1m\n\n\n\n\nMake a note of the assigned cluster IP address and log into node1.  This is required as only nodes running the kube-proxy service can access service IPs.\n\n\n$ vagrant ssh node1.k8sdc.io\n\n$ curl 10.254.4.181\n\n!DOCTYPE html\n\n\nhtml\n\n\nhead\n\n\ntitle\nWelcome to nginx!\n/title\n\n\nstyle\n\n    body {\n        width: 35em;\n        margin: 0 auto;\n        font-family: Tahoma, Verdana, Arial, sans-serif;\n    }\n\n/style\n\n\n/head\n\n\nbody\n\n\nh1\nWelcome to nginx!\n/h1\n\n\np\nIf you see this page, the nginx web server is successfully installed and\nworking. Further configuration is required.\n/p\n\n\n\np\nFor online documentation and support please refer to\n\na href=\nhttp://nginx.org/\nnginx.org\n/a\n.\nbr/\n\nCommercial support is available at\n\na href=\nhttp://nginx.com/\nnginx.com\n/a\n.\n/p\n\n\n\np\nem\nThank you for using nginx.\n/em\n/p\n\n\n/body\n\n\n/html\n\n\n\n\n\nYou should see the Nginx home page.", 
            "title": "Verifying Installation"
        }, 
        {
            "location": "/project/installation/verify_install/#verifying-installation", 
            "text": "Use the following instructions to validate that the install has succeeded.  The hostnames used are the default Vagrant ones, replace as appropriate.  $ vagrant ssh master.k8sdc.io\n\n$ sudo su -\n\n$ kubectl get node\nNAME           LABELS                                STATUS\nnode1.k8sdc.io   kubernetes.io/hostname=node1.k8sdc.io   Ready\nnode2.k8sdc.io   kubernetes.io/hostname=node2.k8sdc.io   Ready\n\n$ kubectl run nginx --image=nginx --replicas=5\nreplicationcontroller  nginx  created  It will take a while for Docker to download the nginx container.  Periodically check if the pods have been launched.  $ kubectl get po\nNAME          READY     STATUS    RESTARTS   AGE\nnginx-2gkxs   1/1       Running   0          1m\nnginx-479e3   1/1       Running   0          1m\nnginx-gm7m8   1/1       Running   0          1m\nnginx-rtha7   1/1       Running   0          1m\nnginx-xfm0b   1/1       Running   0          1m  Create a service endpoint for the pods.  $ kubectl expose rc nginx --port=80 --target-port=80\nservice  nginx  exposed\n\n$ kubectl get svc nginx\nNAME      CLUSTER_IP     EXTERNAL_IP   PORT(S)   SELECTOR    AGE\nnginx     10.254.4.181    none         80/TCP    run=nginx   1m  Make a note of the assigned cluster IP address and log into node1.  This is required as only nodes running the kube-proxy service can access service IPs.  $ vagrant ssh node1.k8sdc.io\n\n$ curl 10.254.4.181 !DOCTYPE html  html  head  title Welcome to nginx! /title  style \n    body {\n        width: 35em;\n        margin: 0 auto;\n        font-family: Tahoma, Verdana, Arial, sans-serif;\n    } /style  /head  body  h1 Welcome to nginx! /h1  p If you see this page, the nginx web server is successfully installed and\nworking. Further configuration is required. /p  p For online documentation and support please refer to a href= http://nginx.org/ nginx.org /a . br/ \nCommercial support is available at a href= http://nginx.com/ nginx.com /a . /p  p em Thank you for using nginx. /em /p  /body  /html   You should see the Nginx home page.", 
            "title": "Verifying Installation"
        }, 
        {
            "location": "/project/installation/services/", 
            "text": "Accessing Services\n\n\n\n\n\nThere are a number of services that k8sdc provides by default.  To confirm a successful installation you can try accessing some of them.\n\n\nNote\n\n\nThe following urls are the default ones.  They also require that your local \n/etc/hosts\n file contains the correct entries.  See \nHosts File Setup\n for details.\n\n\nLogging\n\n\nUsing Kibana, Elasticsearch and Fluentd.\n\n\nlogging.cluster.k8sdc.io\n\n\nJob Management\n\n\nUsing Jenkins.\n\n\njenkins.development.k8sdc.io\n\n\nArtifact Management\n\n\nUsing Artifactory.\n\n\nartifactory.development.k8sdc.io", 
            "title": "Accessing Services"
        }, 
        {
            "location": "/project/installation/services/#accessing-services", 
            "text": "There are a number of services that k8sdc provides by default.  To confirm a successful installation you can try accessing some of them.  Note  The following urls are the default ones.  They also require that your local  /etc/hosts  file contains the correct entries.  See  Hosts File Setup  for details.", 
            "title": "Accessing Services"
        }, 
        {
            "location": "/project/installation/services/#logging", 
            "text": "Using Kibana, Elasticsearch and Fluentd.  logging.cluster.k8sdc.io", 
            "title": "Logging"
        }, 
        {
            "location": "/project/installation/services/#job-management", 
            "text": "Using Jenkins.  jenkins.development.k8sdc.io", 
            "title": "Job Management"
        }, 
        {
            "location": "/project/installation/services/#artifact-management", 
            "text": "Using Artifactory.  artifactory.development.k8sdc.io", 
            "title": "Artifact Management"
        }, 
        {
            "location": "/project/installation/custom_install/", 
            "text": "Customising Installation\n\n\n\n\n\nTODO", 
            "title": "Customising Installation"
        }, 
        {
            "location": "/project/installation/custom_install/#customising-installation", 
            "text": "TODO", 
            "title": "Customising Installation"
        }, 
        {
            "location": "/project/services/cluster/overview/", 
            "text": "Cluster Services Overview\n\n\n\n\n\nThe cluster services are provided by the Kubernetes project.  At present there are the following services.\n\n\n\n\n\n\nDNS\n\n\n\n\n\n\nDocker Registry\n\n\n\n\n\n\nLogging\n\n\n\n\n\n\nMonitoring\n - \ntodo\n\n\n\n\n\n\nKube-UI", 
            "title": "Overview"
        }, 
        {
            "location": "/project/services/cluster/overview/#cluster-services-overview", 
            "text": "The cluster services are provided by the Kubernetes project.  At present there are the following services.    DNS    Docker Registry    Logging    Monitoring  -  todo    Kube-UI", 
            "title": "Cluster Services Overview"
        }, 
        {
            "location": "/project/services/cluster/dns/", 
            "text": "DNS Cluster Service\n\n\n\n\n\nIMPLEMENTED\n\n\nDocumentation TODO", 
            "title": "DNS"
        }, 
        {
            "location": "/project/services/cluster/dns/#dns-cluster-service", 
            "text": "IMPLEMENTED  Documentation TODO", 
            "title": "DNS Cluster Service"
        }, 
        {
            "location": "/project/services/cluster/registry/", 
            "text": "Docker Registry Cluster Service\n\n\n\n\n\nIMPLEMENTED \n\n\nDocumentation TODO", 
            "title": "Docker Registry"
        }, 
        {
            "location": "/project/services/cluster/registry/#docker-registry-cluster-service", 
            "text": "IMPLEMENTED   Documentation TODO", 
            "title": "Docker Registry Cluster Service"
        }, 
        {
            "location": "/project/services/cluster/logging/", 
            "text": "Logging Cluster Service\n\n\n\n\n\nIMPLEMENTED\n\n\nDocumentation TODO", 
            "title": "Logging"
        }, 
        {
            "location": "/project/services/cluster/logging/#logging-cluster-service", 
            "text": "IMPLEMENTED  Documentation TODO", 
            "title": "Logging Cluster Service"
        }, 
        {
            "location": "/project/services/cluster/monitoring/", 
            "text": "Monitoring Cluster Service\n\n\n\n\n\nTODO", 
            "title": "Monitoring"
        }, 
        {
            "location": "/project/services/cluster/monitoring/#monitoring-cluster-service", 
            "text": "TODO", 
            "title": "Monitoring Cluster Service"
        }, 
        {
            "location": "/project/services/cluster/kube-ui/", 
            "text": "Kube-UI Cluster Service\n\n\n\n\n\nIMPLEMENTED\n\n\nDocumentation TODO", 
            "title": "Kube-UI"
        }, 
        {
            "location": "/project/services/cluster/kube-ui/#kube-ui-cluster-service", 
            "text": "IMPLEMENTED  Documentation TODO", 
            "title": "Kube-UI Cluster Service"
        }, 
        {
            "location": "/project/services/infrastructure/overview/", 
            "text": "Infrastructure Services Overview\n\n\nCapabilities\n\n\nDocumentation TODO", 
            "title": "Overview"
        }, 
        {
            "location": "/project/services/infrastructure/overview/#infrastructure-services-overview", 
            "text": "", 
            "title": "Infrastructure Services Overview"
        }, 
        {
            "location": "/project/services/infrastructure/overview/#capabilities", 
            "text": "Documentation TODO", 
            "title": "Capabilities"
        }, 
        {
            "location": "/project/services/infrastructure/load-balancing/", 
            "text": "Load Balancer Service\n\n\nIMPLEMENTED \n\n\nUsing \nVulcand\n and \nRomulus\n for the solution. \n\n\nDetails\n\n\nDocumentation TODO", 
            "title": "Load Balancing"
        }, 
        {
            "location": "/project/services/infrastructure/load-balancing/#load-balancer-service", 
            "text": "IMPLEMENTED   Using  Vulcand  and  Romulus  for the solution.", 
            "title": "Load Balancer Service"
        }, 
        {
            "location": "/project/services/infrastructure/load-balancing/#details", 
            "text": "Documentation TODO", 
            "title": "Details"
        }, 
        {
            "location": "/project/services/infrastructure/ldap/", 
            "text": "LDAP Infrastructure Service\n\n\nIMPLEMENTED\n\n\nUsing \nOpenDJ\n for the solution.\n\n\nDetails\n\n\nDocumentation TODO", 
            "title": "LDAP"
        }, 
        {
            "location": "/project/services/infrastructure/ldap/#ldap-infrastructure-service", 
            "text": "IMPLEMENTED  Using  OpenDJ  for the solution.", 
            "title": "LDAP Infrastructure Service"
        }, 
        {
            "location": "/project/services/infrastructure/ldap/#details", 
            "text": "Documentation TODO", 
            "title": "Details"
        }, 
        {
            "location": "/project/services/infrastructure/roadmap/", 
            "text": "Infrastructure Services Roadmap\n\n\nCapabilities\n\n\nDistributed and replicated filesystem - solution GlusterFS\n\n\nTODO", 
            "title": "Roadmap"
        }, 
        {
            "location": "/project/services/infrastructure/roadmap/#infrastructure-services-roadmap", 
            "text": "", 
            "title": "Infrastructure Services Roadmap"
        }, 
        {
            "location": "/project/services/infrastructure/roadmap/#capabilities", 
            "text": "Distributed and replicated filesystem - solution GlusterFS  TODO", 
            "title": "Capabilities"
        }, 
        {
            "location": "/project/services/development/overview/", 
            "text": "Development Services Overview\n\n\n\n\n\nCapabilities\n\n\nTODO", 
            "title": "Overview"
        }, 
        {
            "location": "/project/services/development/overview/#development-services-overview", 
            "text": "", 
            "title": "Development Services Overview"
        }, 
        {
            "location": "/project/services/development/overview/#capabilities", 
            "text": "TODO", 
            "title": "Capabilities"
        }, 
        {
            "location": "/project/services/development/job-management/", 
            "text": "Job Management Development Service\n\n\n\n\n\nIMPLEMENTED\n\n\nUsing \nJenkins\n for the solution.\n\n\nDetails\n\n\nDocumentation TODO", 
            "title": "Job Management"
        }, 
        {
            "location": "/project/services/development/job-management/#job-management-development-service", 
            "text": "IMPLEMENTED  Using  Jenkins  for the solution.", 
            "title": "Job Management Development Service"
        }, 
        {
            "location": "/project/services/development/job-management/#details", 
            "text": "Documentation TODO", 
            "title": "Details"
        }, 
        {
            "location": "/project/services/development/artifact-management/", 
            "text": "Artifact Management Development Service\n\n\n\n\n\nIMPLEMENTED\n\n\nUsing \nArtifactory\n for the solution.\n\n\nDetails\n\n\nDocumentation TODO", 
            "title": "Artifact Management"
        }, 
        {
            "location": "/project/services/development/artifact-management/#artifact-management-development-service", 
            "text": "IMPLEMENTED  Using  Artifactory  for the solution.", 
            "title": "Artifact Management Development Service"
        }, 
        {
            "location": "/project/services/development/artifact-management/#details", 
            "text": "Documentation TODO", 
            "title": "Details"
        }, 
        {
            "location": "/project/services/development/roadmap/", 
            "text": "Development Services Roadmap\n\n\n\n\n\nCapabilities\n\n\nTODO", 
            "title": "Roadmap"
        }, 
        {
            "location": "/project/services/development/roadmap/#development-services-roadmap", 
            "text": "", 
            "title": "Development Services Roadmap"
        }, 
        {
            "location": "/project/services/development/roadmap/#capabilities", 
            "text": "TODO", 
            "title": "Capabilities"
        }, 
        {
            "location": "/project/services/development/overview/", 
            "text": "Development Services Overview\n\n\n\n\n\nCapabilities\n\n\nTODO", 
            "title": "Overview"
        }, 
        {
            "location": "/project/services/development/overview/#development-services-overview", 
            "text": "", 
            "title": "Development Services Overview"
        }, 
        {
            "location": "/project/services/development/overview/#capabilities", 
            "text": "TODO", 
            "title": "Capabilities"
        }, 
        {
            "location": "/project/services/development/roadmap/", 
            "text": "Development Services Roadmap\n\n\n\n\n\nCapabilities\n\n\nTODO", 
            "title": "Roadmap"
        }, 
        {
            "location": "/project/services/development/roadmap/#development-services-roadmap", 
            "text": "", 
            "title": "Development Services Roadmap"
        }, 
        {
            "location": "/project/services/development/roadmap/#capabilities", 
            "text": "TODO", 
            "title": "Capabilities"
        }, 
        {
            "location": "/project/roadmap/", 
            "text": "Services Roadmap\n\n\n\n\n\nThe following lists contain items that are intended to make it into the k8sdc platform. However, these items are likely to change.\n\n\nDone but needs more work\n\n\n\n\nKubernetes cluster services (as per Kubernetes standards)\n\n\nDNS\n\n\nDocker registry\n\n\nLogging\n\n\nKube-UI\n\n\n\n\n\n\nExternal facing HTTP/S load balancer (Vulcand and Romulus)\n\n\nJob Management (Jenkins)\n\n\nArtifact Management (Artifactory)\n\n\nLDAP (OpenDJ)\n\n\n\n\nPriority\n\n\nRoughly in order of priority.\n\n\n\n\nHighly available SQL database (PotgreSQL)\n\n\nInstant Messaging (Mattermost)\n\n\nProject management (Taiga)\n\n\nDistributed storage (GlusterFS)\n\n\nApplication logging and alerting (ELK and Prometheus)\n\n\nMicroservices example application\n\n\nPaaS (Select Openshift V3 capabilities)\n\n\n\n\nSecondary\n\n\nIn no particular order.\n\n\n\n\nGit\n\n\nCode review\n\n\nBlog\n\n\nWiki\n\n\nCMS\n\n\nForum\n\n\nEmail\n\n\nProject management\n\n\nReporting and analytics\n\n\nVPN\n\n\nPerformance / usability testing\n\n\nMessaging\n\n\nDatabase\n\n\nCaching\n\n\nBatch", 
            "title": "Roadmap"
        }, 
        {
            "location": "/project/roadmap/#services-roadmap", 
            "text": "The following lists contain items that are intended to make it into the k8sdc platform. However, these items are likely to change.", 
            "title": "Services Roadmap"
        }, 
        {
            "location": "/project/roadmap/#done-but-needs-more-work", 
            "text": "Kubernetes cluster services (as per Kubernetes standards)  DNS  Docker registry  Logging  Kube-UI    External facing HTTP/S load balancer (Vulcand and Romulus)  Job Management (Jenkins)  Artifact Management (Artifactory)  LDAP (OpenDJ)", 
            "title": "Done but needs more work"
        }, 
        {
            "location": "/project/roadmap/#priority", 
            "text": "Roughly in order of priority.   Highly available SQL database (PotgreSQL)  Instant Messaging (Mattermost)  Project management (Taiga)  Distributed storage (GlusterFS)  Application logging and alerting (ELK and Prometheus)  Microservices example application  PaaS (Select Openshift V3 capabilities)", 
            "title": "Priority"
        }, 
        {
            "location": "/project/roadmap/#secondary", 
            "text": "In no particular order.   Git  Code review  Blog  Wiki  CMS  Forum  Email  Project management  Reporting and analytics  VPN  Performance / usability testing  Messaging  Database  Caching  Batch", 
            "title": "Secondary"
        }, 
        {
            "location": "/guides/workflow/overview/", 
            "text": "Workflow Guides\n\n\n\n\n\nGuides describing ways to use the various services in combination to create combined workflows.", 
            "title": "Overview"
        }, 
        {
            "location": "/guides/workflow/overview/#workflow-guides", 
            "text": "Guides describing ways to use the various services in combination to create combined workflows.", 
            "title": "Workflow Guides"
        }, 
        {
            "location": "/guides/workflow/infrastructure/", 
            "text": "Infrastructure Workflow Guides\n\n\n\n\n\nGuides describing how to use the k8sdc infrastructure services.", 
            "title": "Infrastructure"
        }, 
        {
            "location": "/guides/workflow/infrastructure/#infrastructure-workflow-guides", 
            "text": "Guides describing how to use the k8sdc infrastructure services.", 
            "title": "Infrastructure Workflow Guides"
        }, 
        {
            "location": "/guides/workflow/development/", 
            "text": "Development Workflow Guides\n\n\n\n\n\nGuides describing how to use the k8sdc development services.", 
            "title": "Development"
        }, 
        {
            "location": "/guides/workflow/development/#development-workflow-guides", 
            "text": "Guides describing how to use the k8sdc development services.", 
            "title": "Development Workflow Guides"
        }, 
        {
            "location": "/guides/workflow/productivity/", 
            "text": "Productivity Workflow Guides\n\n\n\n\n\nGuides describing how to use the k8sdc productivity services.", 
            "title": "Productivity"
        }, 
        {
            "location": "/guides/workflow/productivity/#productivity-workflow-guides", 
            "text": "Guides describing how to use the k8sdc productivity services.", 
            "title": "Productivity Workflow Guides"
        }, 
        {
            "location": "/guides/examples/overview/", 
            "text": "Application Examples\n\n\n\n\n\nExamples of different types of application that can be created using the capabilities provided by the k8sdc platform.", 
            "title": "Overview"
        }, 
        {
            "location": "/guides/examples/overview/#application-examples", 
            "text": "Examples of different types of application that can be created using the capabilities provided by the k8sdc platform.", 
            "title": "Application Examples"
        }, 
        {
            "location": "/guides/examples/static-web-site/", 
            "text": "Static Website\n\n\n\n\n\nA static website with the following capabilties.\n\n\n\n\n\n\nLoad balancing.\n\n\n\n\n\n\nWeb Server.", 
            "title": "Static Web Site"
        }, 
        {
            "location": "/guides/examples/static-web-site/#static-website", 
            "text": "A static website with the following capabilties.    Load balancing.    Web Server.", 
            "title": "Static Website"
        }, 
        {
            "location": "/guides/examples/dynamic-web-site/", 
            "text": "Dynamic Website\n\n\n\n\n\nA dynamic website with the following capabilties.\n\n\n\n\n\n\nLoad balancing.\n\n\n\n\n\n\nWeb Server.\n\n\n\n\n\n\nApplication Server.\n\n\n\n\n\n\nCaching.\n\n\n\n\n\n\nSQL database.", 
            "title": "Dynamic Web Site"
        }, 
        {
            "location": "/guides/examples/dynamic-web-site/#dynamic-website", 
            "text": "A dynamic website with the following capabilties.    Load balancing.    Web Server.    Application Server.    Caching.    SQL database.", 
            "title": "Dynamic Website"
        }, 
        {
            "location": "/guides/examples/microservice/", 
            "text": "Microservice\n\n\n\n\n\nA microservice with the following capabilties.\n\n\n\n\n\n\nLoad balancing.\n\n\n\n\n\n\nApplication Server.\n\n\n\n\n\n\nSQL Database.", 
            "title": "Microservice"
        }, 
        {
            "location": "/guides/examples/microservice/#microservice", 
            "text": "A microservice with the following capabilties.    Load balancing.    Application Server.    SQL Database.", 
            "title": "Microservice"
        }, 
        {
            "location": "/guides/examples/microservice-collection/", 
            "text": "Microservice Collection\n\n\n\n\n\nA collection of microservices self registering and discovering each other in a graph structure each with the following capabilties.\n\n\n\n\n\n\nLoad balancing.\n\n\n\n\n\n\nApplication Server.\n\n\n\n\n\n\nSQL Database.", 
            "title": "Microservice Collection"
        }, 
        {
            "location": "/guides/examples/microservice-collection/#microservice-collection", 
            "text": "A collection of microservices self registering and discovering each other in a graph structure each with the following capabilties.    Load balancing.    Application Server.    SQL Database.", 
            "title": "Microservice Collection"
        }, 
        {
            "location": "/guides/examples/complex-app/", 
            "text": "Complex Application\n\n\n\n\n\nA complex application with messaging and microservices using the following capabilities.\n\n\n\n\n\n\nLoad balancing.\n\n\n\n\n\n\nWeb Server.\n\n\n\n\n\n\nApplication Server.\n\n\n\n\n\n\nCaching.\n\n\n\n\n\n\nSQL database.\n\n\n\n\n\n\nNOSQL database.\n\n\n\n\n\n\nDistributed storage.\n\n\n\n\n\n\nMessaging.", 
            "title": "Complex Application"
        }, 
        {
            "location": "/guides/examples/complex-app/#complex-application", 
            "text": "A complex application with messaging and microservices using the following capabilities.    Load balancing.    Web Server.    Application Server.    Caching.    SQL database.    NOSQL database.    Distributed storage.    Messaging.", 
            "title": "Complex Application"
        }, 
        {
            "location": "/reference/utilities/", 
            "text": "Utilities\n\n\n\n\n\nThere are a number of utility scripts provide by k8sdc.  This section details them.\n\n\nVagrant Restart Fix\n\n\nWhen the Vagrant managed k8sdc nodes are restarted some of the required services do not automatically come back up.  This is a a known Vagrant issue with the rpcbind service and it does not happen when using Digital Ocean.  To remedy this the \nvagrant_restart_fix.sh\n should be run after each restart of Vagrant.\n\n\n$ cd utilities\n\n$ ./vagrant_restart_fix.sh\n\n\n\n\nHosts File Setup\n\n\nThis utility sets up the local \n/etc/hosts\n file to include the k8sdc services FQDNs.\n\n\n$ cd utilities\n\n$ ./hosts_file_setup.sh", 
            "title": "Utilities"
        }, 
        {
            "location": "/reference/utilities/#utilities", 
            "text": "There are a number of utility scripts provide by k8sdc.  This section details them.", 
            "title": "Utilities"
        }, 
        {
            "location": "/reference/utilities/#vagrant-restart-fix", 
            "text": "When the Vagrant managed k8sdc nodes are restarted some of the required services do not automatically come back up.  This is a a known Vagrant issue with the rpcbind service and it does not happen when using Digital Ocean.  To remedy this the  vagrant_restart_fix.sh  should be run after each restart of Vagrant.  $ cd utilities\n\n$ ./vagrant_restart_fix.sh", 
            "title": "Vagrant Restart Fix"
        }, 
        {
            "location": "/reference/utilities/#hosts-file-setup", 
            "text": "This utility sets up the local  /etc/hosts  file to include the k8sdc services FQDNs.  $ cd utilities\n\n$ ./hosts_file_setup.sh", 
            "title": "Hosts File Setup"
        }, 
        {
            "location": "/reference/capabilities/", 
            "text": "Capabilties\n\n\n\n\n\nTODO", 
            "title": "Capabilities"
        }, 
        {
            "location": "/reference/capabilities/#capabilties", 
            "text": "TODO", 
            "title": "Capabilties"
        }, 
        {
            "location": "/reference/solutions/", 
            "text": "Solutions\n\n\n\n\n\nTODO", 
            "title": "Solutions"
        }, 
        {
            "location": "/reference/solutions/#solutions", 
            "text": "TODO", 
            "title": "Solutions"
        }, 
        {
            "location": "/reference/services/", 
            "text": "Services\n\n\n\n\n\nTODO", 
            "title": "Services"
        }, 
        {
            "location": "/reference/services/#services", 
            "text": "TODO", 
            "title": "Services"
        }, 
        {
            "location": "/reference/products/", 
            "text": "Products\n\n\n\n\n\nTODO", 
            "title": "Products"
        }, 
        {
            "location": "/reference/products/#products", 
            "text": "TODO", 
            "title": "Products"
        }
    ]
}